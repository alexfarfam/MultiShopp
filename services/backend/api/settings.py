"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path

# Configure environment variables from file, if you are not in a production environment
if os.getenv('DEBUG', None) is None:
    from dotenv import load_dotenv
    load_dotenv(Path(__file__).resolve().parent.parent.parent.parent.joinpath('.env.dev'))

# Set debug, secret key and hosts from the environment (the key differs according to the environment)
DEBUG = bool(int(os.getenv('DEBUG')))
SECRET_KEY = os.getenv('SECRET_KEY')
ALLOWED_HOSTS = os.getenv('HOSTS').split(',') 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',
    'debug_toolbar',
    'rest_framework',
    'djoser',
    'rest_framework_simplejwt',
    #'rest_framework_simplejwt.token_blacklist',
    'core.apps.CoreConfig'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Set WSGI/ASGI application
WSGI_APPLICATION = 'api.wsgi.application'

# Set Custom User
AUTH_USER_MODEL = "core.CustomUser"

# Set DRF Configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}
SIMPLE_JWT={
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=float(os.getenv('ACCESS_TOKEN_LIFETIME'))),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=float(os.getenv('REFRESH_TOKEN_LIFETIME'))),
    'ROTATE_REFRESH_TOKENS': True, 
    'BLACKLIST_AFTER_ROTATION': True 
}

# Set Custom Auth Backend(email instead of username)
AUTHENTICATION_BACKENDS = ['core.backends.auth_backends.EmailBackend']

# Set Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = int(os.getenv('EMAIL_PORT'))
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')

# Set Djoser Configuration
DJOSER = {
    'PASSWORD_RESET_CONFIRM_URL': os.getenv('CLIENT_URL') + 'auth/confirm-reset?uid={uid}&&token={token}',
    'ACTIVATION_URL': os.getenv('CLIENT_URL') + 'auth/activate?uid={uid}&&token={token}',

    'PASSWORD_RESET_CONFIRM_RETYPE': True,
    'SEND_ACTIVATION_EMAIL': True,
    'SERIALIZERS': {
        'user_create': 'core.serializers.UserCreateSerializer',
    },
    'EMAIL': {
        'activation': 'core.email.CustomActivationEmail',
        'password_reset':'core.email.CustomResetPasswordEmail',
    }
}


# Set CORS Configuration
CORS_ALLOWED_ORIGINS = os.getenv('CORS_HOSTS').split(',') 
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with'
]
CORS_ALLOW_CREDENTIALS = True

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': os.getenv("DB_NAME"),
        'HOST': os.getenv("DB_HOST"),
        'PORT': int(os.getenv("DB_PORT")),
        'USER': os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASSWORD"),
        'AUTOCOMMIT': True,
        'OPTIONS': {
            'driver': 'FreeTDS',
            'unicode_results': True,
            'host_is_server': True,
            'driver_supports_utf8': True,
            'extra_params': 'tds_version=7.4',
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es-AR'

TIME_ZONE = 'UTC' #'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Set django toolbar only in development environment
if DEBUG:
    INTERNAL_IPS = ["127.0.0.1"]
    def show_toolbar(request):                                     
        return True                                               

    DEBUG_TOOLBAR_CONFIG = {                                       
        "SHOW_TOOLBAR_CALLBACK" : show_toolbar,                    
    } 
else:
    # Configuration in production environment
    MIDDLEWARE+=['csp.middleware.CSPMiddleware']
    STATIC_ROOT = '/home/app/backend/staticfiles'
    MEDIA_URL = '/media/'
    MEDIA_ROOT = '/home/app/backend/mediafiles'
    STATICFILES_DIRS = [BASE_DIR / "static"]

    CSP_STYLE_SRC = ["'self'", "'unsafe-inline'"]
    CSRF_TRUSTED_ORIGINS = ['https://*.emprender-radix.com']
    CSP_STYLE_SRC = ["'self'", "'unsafe-inline'"]
    CSRF_TRUSTED_ORIGINS = ['https://*.emprender-radix.com']
    SECURE_REFERRER_POLICY = "strict-origin-when-cross-origin"
    SECURE_HSTS_SECONDS = 2_592_000
    SECURE_HSTS_PRELOAD = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")